// <auto-generated />
using System;
using EasyLibby.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EasyLibby.Api.Data.Migrations
{
    [DbContext(typeof(LibraryDbContext))]
    partial class LibraryDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EasyLibby.Api.Entities.AuthorAggregate.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DateBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateBirth = new DateTime(1948, 2, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Eckhart",
                            LastName = "Tolle"
                        },
                        new
                        {
                            Id = 2,
                            DateBirth = new DateTime(1962, 6, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Jordan B.",
                            LastName = "Peterson"
                        },
                        new
                        {
                            Id = 3,
                            DateBirth = new DateTime(1945, 3, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Paulo",
                            LastName = "Coelho"
                        },
                        new
                        {
                            Id = 4,
                            DateBirth = new DateTime(1927, 3, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Gabriel García",
                            LastName = "Márquez"
                        });
                });

            modelBuilder.Entity("EasyLibby.Api.Entities.BookAggregate.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<string>("CoverImageUri")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<decimal?>("ISBN")
                        .HasPrecision(13)
                        .HasColumnType("decimal(13,0)");

                    b.Property<DateTime?>("PublishedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 2,
                            CoverImageUri = "https://images.isbndb.com/covers/60/47/9780345816047.jpg",
                            ISBN = 9780345816023m,
                            PublishedDate = new DateTime(1975, 3, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "12 Rules for Life: An Antidote to Chaos"
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 1,
                            CoverImageUri = "https://images.isbndb.com/covers/15/22/9781577311522.jpg",
                            ISBN = 9781577311522m,
                            PublishedDate = new DateTime(1985, 3, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "The Power of Now: A Guide to Spiritual Enlightenment"
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 1,
                            CoverImageUri = "https://images.isbndb.com/covers/94/11/9780141039411.jpg",
                            ISBN = 9780141039411m,
                            PublishedDate = new DateTime(1995, 9, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "A New Earth: Awakening to Your Life's Purpose"
                        },
                        new
                        {
                            Id = 4,
                            AuthorId = 3,
                            CoverImageUri = "https://covers.openlibrary.org/b/id/45762-M.jpg",
                            ISBN = 9780062315007m,
                            PublishedDate = new DateTime(1989, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "The Alchemist"
                        },
                        new
                        {
                            Id = 5,
                            AuthorId = 3,
                            CoverImageUri = "https://covers.openlibrary.org/b/id/31229-M.jpg",
                            ISBN = 9780060589288m,
                            PublishedDate = new DateTime(1997, 1, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Eleven Minutes"
                        },
                        new
                        {
                            Id = 6,
                            AuthorId = 4,
                            CoverImageUri = "https://covers.openlibrary.org/b/id/40565-M.jpg",
                            ISBN = 9780140157512m,
                            PublishedDate = new DateTime(1967, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "One Hundred Years of Solitude"
                        },
                        new
                        {
                            Id = 7,
                            AuthorId = 4,
                            CoverImageUri = "https://covers.openlibrary.org/b/id/10097251-M.jpg",
                            ISBN = 9780330255608m,
                            PublishedDate = new DateTime(1978, 5, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "The Autumn of the Patriarch"
                        });
                });

            modelBuilder.Entity("EasyLibby.Api.Entities.LibrarianAggregate.Librarian", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.HasKey("Id");

                    b.ToTable("Librarians");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "libJohn@gmail2.com",
                            FirstName = "LibJohn",
                            LastName = "LibDoe",
                            Password = "pass123word"
                        },
                        new
                        {
                            Id = 2,
                            Email = "Libjane@gmail2.com",
                            FirstName = "LibJane",
                            LastName = "LibDoe",
                            Password = "pass678word"
                        });
                });

            modelBuilder.Entity("EasyLibby.Api.Entities.LoansAggregate.Loan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime>("BorrowedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<int>("RenewedTimes")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("MemberId");

                    b.ToTable("Loans");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookId = 1,
                            BorrowedDate = new DateTime(2024, 4, 23, 0, 51, 0, 619, DateTimeKind.Local).AddTicks(8539),
                            DueDate = new DateTime(2024, 5, 23, 0, 51, 0, 619, DateTimeKind.Local).AddTicks(8599),
                            MemberId = 1,
                            RenewedTimes = 1
                        },
                        new
                        {
                            Id = 2,
                            BookId = 3,
                            BorrowedDate = new DateTime(2024, 4, 21, 0, 51, 0, 619, DateTimeKind.Local).AddTicks(8603),
                            DueDate = new DateTime(2024, 5, 21, 0, 51, 0, 619, DateTimeKind.Local).AddTicks(8604),
                            MemberId = 1,
                            RenewedTimes = 0
                        });
                });

            modelBuilder.Entity("EasyLibby.Api.Entities.MemberAggregate.Member", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.HasKey("Id");

                    b.ToTable("Members");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateBirth = new DateTime(1980, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "John@gmail2.com",
                            FirstName = "John",
                            LastName = "Doe",
                            Password = "pass123word"
                        },
                        new
                        {
                            Id = 2,
                            DateBirth = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "jane@gmail2.com",
                            FirstName = "Jane",
                            LastName = "Doe",
                            Password = "pass45word"
                        },
                        new
                        {
                            Id = 3,
                            DateBirth = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "alice@gmail2.com",
                            FirstName = "Alice",
                            LastName = "Smith",
                            Password = "pass67word"
                        },
                        new
                        {
                            Id = 4,
                            DateBirth = new DateTime(1995, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "bob@gmail2.com",
                            FirstName = "Bob",
                            LastName = "Smith",
                            Password = "pass89word"
                        });
                });

            modelBuilder.Entity("EasyLibby.Api.Entities.BookAggregate.Book", b =>
                {
                    b.HasOne("EasyLibby.Api.Entities.AuthorAggregate.Author", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("EasyLibby.Api.Entities.LoansAggregate.Loan", b =>
                {
                    b.HasOne("EasyLibby.Api.Entities.BookAggregate.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EasyLibby.Api.Entities.MemberAggregate.Member", "Member")
                        .WithMany()
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Member");
                });
#pragma warning restore 612, 618
        }
    }
}
